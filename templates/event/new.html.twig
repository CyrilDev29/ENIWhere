{% extends 'base.html.twig' %}

{% block title %}Créer un événement{% endblock %}


{% block stylesheets %}
    <style>
        /* Carte du formulaire : douce élévation au survol */
        .form-card{
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,.12);
            transition: transform .28s ease, box-shadow .28s ease;
        }
        .form-card:hover{
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 28px 60px rgba(0,0,0,.20);
        }
        /* L’en-tête reste bien arrondi */
        .form-card .card-header{
            border-top-left-radius: 20px;
            border-top-right-radius: 20px;
        }
        /* Un léger focus sympa mais discret pour les champs */
        .form-card .form-control:focus,
        .form-card .form-select:focus{
            box-shadow: 0 0 0 .25rem rgba(99,102,241,.15);
            border-color: #6c63ff;
        }
    </style>
{% endblock %}

{% block body %}
    {% if app.user %}
        <div class="container py-4">
            {# Flashs #}
            {% for label, messages in app.flashes %}
                {% for message in messages %}
                    <div class="alert alert-{{ label == 'error' ? 'danger' : label }} alert-dismissible fade show" role="alert">
                        {{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fermer"></button>
                    </div>
                {% endfor %}
            {% endfor %}

            <div class="row justify-content-center">
                <div class="col-12 col-lg-10">
                    <div class="card form-card">
                        <div class="card-header bg-primary-subtle text-primary border-0">
                            <h5 class="mb-0">Créer un nouvel événement</h5>
                        </div>

                        <div class="card-body">
                            {{ form_start(form, {'attr': {'class': 'needs-validation'}}) }}
                            <div class="row g-3">
                                <div class="col-md-6">
                                    {{ form_label(form.name) }}
                                    {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div class="col-md-6">
                                    {{ form_label(form.startDateTime) }}
                                    {{ form_widget(form.startDateTime, {'attr': {'class': 'form-control'}}) }}
                                </div>

                                <div class="col-md-4">
                                    {{ form_label(form.duration) }}
                                    {{ form_widget(form.duration, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div class="col-md-4">
                                    {{ form_label(form.registrationDeadline) }}
                                    {{ form_widget(form.registrationDeadline, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div class="col-md-4">
                                    {{ form_label(form.maxParticipant) }}
                                    {{ form_widget(form.maxParticipant, {'attr': {'class': 'form-control'}}) }}
                                </div>

                                <div class="col-12">
                                    {{ form_label(form.description) }}
                                    {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 4}}) }}
                                </div>

                                <div class="col-12 position-relative">
                                    {{ form_label(form.place) }}
                                    {{ form_widget(form.place, {'attr': {'class': 'form-control autocomplete-place'}}) }}
                                    <ul id="suggestions"
                                        class="list-group position-absolute w-100 shadow-sm z-3 overflow-auto"
                                        style="max-height:180px;"></ul>
                                </div>

                                <div class="col-md-6">
                                    {{ form_label(form.street) }}
                                    {{ form_widget(form.street, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div class="col-md-3">
                                    {{ form_label(form.postalCode) }}
                                    {{ form_widget(form.postalCode, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div class="col-md-3">
                                    {{ form_label(form.city) }}
                                    {{ form_widget(form.city, {'attr': {'class': 'form-control'}}) }}
                                </div>

                                <div class="col-md-6">
                                    {{ form_label(form.gpsLatitude) }}
                                    {{ form_widget(form.gpsLatitude, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div class="col-md-6">
                                    {{ form_label(form.gpsLongitude) }}
                                    {{ form_widget(form.gpsLongitude, {'attr': {'class': 'form-control'}}) }}
                                </div>

                                <div class="col-12">
                                    {{ form_label(form.site) }}
                                    {{ form_widget(form.site, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>

                            <div class="mt-4 d-flex justify-content-between">
                                <a href="{{ path('event_index') }}" class="btn btn-outline-secondary">← Retour à la liste</a>
                                <button type="submit" class="btn btn-primary shadow-sm">Enregistrer</button>
                            </div>

                            {{ form_end(form) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {# Autocomplete JS — inchangé #}
        <script>
            const input = document.querySelector('.autocomplete-place');
            const suggestionsList = document.querySelector('#suggestions');
            const cityInput = document.querySelector('#event_city');
            const latInput = document.querySelector('#event_gpsLatitude');
            const lonInput = document.querySelector('#event_gpsLongitude');
            const streetInput = document.querySelector('#event_street');
            const postalCodeInput = document.querySelector('#event_postalCode');

            let suggestions = [];

            input.addEventListener('input', async function() {
                const query = this.value;
                if (query.length < 3) { suggestionsList.innerHTML = ''; return; }
                const response = await fetch(`places/search?q=${encodeURIComponent(query)}`);
                suggestions = await response.json();
                suggestionsList.innerHTML = '';
                suggestions.forEach((place, index) => {
                    const li = document.createElement('li');
                    li.classList.add('list-group-item');
                    li.textContent = place.display_name;
                    li.addEventListener('click', () => selectSuggestion(index));
                    suggestionsList.appendChild(li);
                });
            });

            function selectSuggestion(index) {
                const place = suggestions[index];
                const nameParts = place.display_name.split(',');
                input.value = nameParts[0].trim();
                const address = place.address || {};
                cityInput.value = address.city || address.town || address.village || address.municipality || address.county || '';
                latInput.value = place.lat || '';
                lonInput.value = place.lon || '';
                let streetParts = [];
                if (address.house_number) streetParts.push(address.house_number);
                if (address.road) streetParts.push(address.road);
                if (address.neighbourhood) streetParts.push(address.neighbourhood);
                if (address.suburb) streetParts.push(address.suburb);
                streetInput.value = streetParts.join(' ').trim();
                postalCodeInput.value = address.postcode || '';
                suggestionsList.innerHTML = '';
            }

            document.addEventListener('click', function(e) {
                if (!suggestionsList.contains(e.target) && e.target !== input) {
                    suggestionsList.innerHTML = '';
                }
            });
        </script>

    {% else %}
        <div class="container py-4">
            <p>Vous devez être connecté pour créer un événement. <a href="{{ path('app_login') }}">Se connecter</a></p>
        </div>
    {% endif %}
{% endblock %}


