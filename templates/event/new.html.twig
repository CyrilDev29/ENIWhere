{% extends 'base.html.twig' %}

{% block title %}Créer un événement{% endblock %}

{% block stylesheets %}
    <style>
        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #76f0f1, #9b79e0);
        }

        /* Conteneur parent pour centrer le formulaire */
        .form-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .form-card {
            background: #fff;
            border-radius: 20px;
            padding: 40px 35px;
            width: 100%;
            max-width: 780px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .form-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 30px 60px rgba(0,0,0,0.2);
        }

        .form-card h1 {
            text-align: center;
            margin-bottom: 40px;
            font-weight: 700;
            font-size: 28px;
            color: #4c62b6;
        }

        .form-control, .form-select {
            border-radius: 12px;
            padding: 14px 15px;
            border: 1px solid #ddd;
            transition: border 0.3s ease, box-shadow 0.3s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 10px rgba(102,126,234,0.3);
            outline: none;
        }

        .btn-primary {
            width: 100%;
            background: #667eea;
            border: none;
            padding: 14px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 16px;
            color: #fff;
            cursor: pointer;
            transition: background 0.3s ease, transform 0.2s ease;
        }

        .btn-primary:hover {
            background: #5a67d8;
            transform: translateY(-2px);
        }

        .alert {
            border-radius: 12px;
            padding: 12px 15px;
            margin-bottom: 20px;
        }

        #suggestions li {
            cursor: pointer;
        }
        #suggestions li:hover {
            background-color: #f0f8ff;
        }
    </style>
{% endblock %}

{% block body %}
    {% if app.user %}
        <div class="form-wrapper">
            <div class="form-card">
                <h1>Créer un nouvel événement</h1>

                {{ form_start(form, {'attr': {'class': 'needs-validation'}}) }}

                <div class="row g-3">
                    <div class="col-md-6">
                        {{ form_label(form.name) }}
                        {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-6">
                        {{ form_label(form.startDateTime) }}
                        {{ form_widget(form.startDateTime, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-4">
                        {{ form_label(form.duration) }}
                        {{ form_widget(form.duration, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-4">
                        {{ form_label(form.registrationDeadline) }}
                        {{ form_widget(form.registrationDeadline, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-4">
                        {{ form_label(form.maxParticipant) }}
                        {{ form_widget(form.maxParticipant, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-12">
                        {{ form_label(form.description) }}
                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 4}}) }}
                    </div>

                    <div class="col-12 position-relative">
                        {{ form_label(form.place) }}
                        {{ form_widget(form.place, {'attr': {'class': 'form-control autocomplete-place'}}) }}
                        <ul id="suggestions" class="list-group position-absolute w-100 shadow-sm" style="z-index:1000; max-height:180px; overflow-y:auto;"></ul>
                    </div>

                    <div class="col-md-6">
                        {{ form_label(form.street) }}
                        {{ form_widget(form.street, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-3">
                        {{ form_label(form.postalCode) }}
                        {{ form_widget(form.postalCode, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-3">
                        {{ form_label(form.city) }}
                        {{ form_widget(form.city, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-6">
                        {{ form_label(form.gpsLatitude) }}
                        {{ form_widget(form.gpsLatitude, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-md-6">
                        {{ form_label(form.gpsLongitude) }}
                        {{ form_widget(form.gpsLongitude, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    <div class="col-12">
                        {{ form_label(form.site) }}
                        {{ form_widget(form.site, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>

                <div class="mt-4 d-flex justify-content-between align-items-center">
                    <a href="{{ path('event_index') }}" class="btn btn-outline-secondary">
                        ← Retour à la liste
                    </a>
                    <button type="submit" class="btn btn-primary shadow-sm">
                        Enregistrer
                    </button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>

        <script>
            const input = document.querySelector('.autocomplete-place');
            const suggestionsList = document.querySelector('#suggestions');
            const cityInput = document.querySelector('#event_city');
            const latInput = document.querySelector('#event_gpsLatitude');
            const lonInput = document.querySelector('#event_gpsLongitude');
            const streetInput = document.querySelector('#event_street');
            const postalCodeInput = document.querySelector('#event_postalCode');

            let suggestions = [];

            input.addEventListener('input', async function() {
                const query = this.value;
                if(query.length < 3) { suggestionsList.innerHTML = ''; return; }
                const response = await fetch(`places/search?q=${encodeURIComponent(query)}`);
                suggestions = await response.json();
                suggestionsList.innerHTML = '';
                suggestions.forEach((place, index) => {
                    const li = document.createElement('li');
                    li.classList.add('list-group-item');
                    li.textContent = place.display_name;
                    li.addEventListener('click', () => selectSuggestion(index));
                    suggestionsList.appendChild(li);
                });
            });

            function selectSuggestion(index) {
                const place = suggestions[index];
                const nameParts = place.display_name.split(',');
                input.value = nameParts[0].trim();
                const address = place.address || {};
                cityInput.value = address.city || address.town || address.village || address.municipality || address.county || '';
                latInput.value = place.lat || '';
                lonInput.value = place.lon || '';
                let streetParts = [];
                if(address.house_number) streetParts.push(address.house_number);
                if(address.road) streetParts.push(address.road);
                if(address.neighbourhood) streetParts.push(address.neighbourhood);
                if(address.suburb) streetParts.push(address.suburb);
                streetInput.value = streetParts.join(' ').trim();
                postalCodeInput.value = address.postcode || '';
                suggestionsList.innerHTML = '';
            }

            document.addEventListener('click', function(e) {
                if (!suggestionsList.contains(e.target) && e.target !== input) {
                    suggestionsList.innerHTML = '';
                }
            });
        </script>

    {% else %}
        <p>Vous devez être connecté pour créer un événement. <a href="{{ path('app_login') }}">Se connecter</a></p>
    {% endif %}
{% endblock %}
